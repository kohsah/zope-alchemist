#!/usr/bin/python
##################################################################
#
# (C) Copyright 2006 ObjectRealms, LLC
# All Rights Reserved
#
# This file is part of Alchemist.
#
# Alchemist is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Alchemist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CMFDeployment; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##################################################################
cli_doc = """
 plone2rdb path_to_plone_portal db_uri  

 Dump a plone site to a relational database.

 must be invoked with zopectl run
 
"""

import sys
import optparse
import transaction
from Products.alchemist.Extensions.dump import dump_site

from AccessControl.SecurityManagement import newSecurityManager

def main( app, portal_path, db_uri ):
    import pdb; pdb.set_trace()
    portal = app.unrestrictedTraverse( portal_path )
    user = app.acl_users.getUserById('kapil')
    newSecurityManager( None, user )
    dump_site( portal, db_uri )
    transaction.get().commit()

if __name__ == '__main__':
    try:
        app
    except NameError:
        print cli_doc
        sys.exit(1)

    if not len(sys.argv) == 3:
        print cli_doc
        sys.exit(1)
        
    portal_path, db_uri = sys.argv[1:]
    
    main( app, portal_path, db_uri )
