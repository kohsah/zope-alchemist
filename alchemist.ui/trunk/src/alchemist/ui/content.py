"""

This module gets populated with generic add/edit/view forms for
specific content objects by meta.py

"""

from zope.event import notify
from zope.lifecycleevent import ObjectCreatedEvent
from zope.formlib import form
from zope.formlib.namedtemplate import NamedTemplate
from zope.traversing.browser import absoluteURL
from piston.core.generic import generic as createInstance
    
class PistonAddForm( form.AddForm ):
    """
    generic add form for piston
    """
     
    template = NamedTemplate('piston.form')

    def createAndAdd( self, data ):
        # create the object
        ob = createInstance( self.context.domain_model, data )

        # apply extra form values
        form.applyChanges( ob, self.form_fields, data )
        
        # fire an object created event
        notify(ObjectCreatedEvent(ob))
        
        # save the object, id is generated by db
        self.context[''] = ob

        # signal to add form machinery to go to next url
        self._finished_add = True
        
    def nextURL( self ):
        return absoluteURL( self.context, self.request )
        
class PistonEditForm( form.EditForm ):
    """
    generic edit form for piston
    """
    
    template = NamedTemplate('piston.form')
    
class PistonView( form.DisplayForm ):
    """
    generic view form for piston
    """

    template = NamedTemplate('piston.form')    
